{"ast":null,"code":"var _jsxFileName = \"/Users/gimmingyu/Desktop/chellange/react-todo-app/src/TasksContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// import { createContext } from 'react';\nimport { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksContext = /*#__PURE__*/createContext(null);\nconst TasksDispatchContext = /*#__PURE__*/createContext(null);\nexport function TasksProvider({\n  children\n}) {\n  _s();\n  const [tasks, dispatch] = useReducer(tasksReducer, initialTasks);\n  return /*#__PURE__*/_jsxDEV(TasksContext.Provider, {\n    value: tasks,\n    children: /*#__PURE__*/_jsxDEV(TasksDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(TasksProvider, \"/WXoOWA8jcmGw6IJvQ6lpVQrnbs=\");\n_c = TasksProvider;\nexport function useTasks() {\n  _s2();\n  return useContext(TasksContext);\n}\n_s2(useTasks, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function useTasksDispatch() {\n  _s3();\n  return useContext(TasksDispatchContext);\n}\n_s3(useTasksDispatch, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction tasksReducer(tasks, action) {\n  switch (action.type) {\n    case 'added':\n      {\n        return [...tasks, {\n          id: action.id,\n          text: action.text,\n          done: false\n        }];\n      }\n    case 'changed':\n      {\n        return tasks.map(t => {\n          if (t.id === action.task.id) {\n            return action.task;\n          } else {\n            return t;\n          }\n        });\n      }\n    case 'deleted':\n      {\n        return tasks.filter(t => t.id !== action.id);\n      }\n    default:\n      {\n        throw Error('Unknown action: ' + action.type);\n      }\n  }\n}\nconst initialTasks = [{\n  id: 0,\n  text: 'Philosopher’s Path',\n  done: true\n}, {\n  id: 1,\n  text: 'Visit the temple',\n  done: false\n}, {\n  id: 2,\n  text: 'Drink matcha',\n  done: false\n}];\nvar _c;\n$RefreshReg$(_c, \"TasksProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","jsxDEV","_jsxDEV","TasksContext","TasksDispatchContext","TasksProvider","children","_s","tasks","dispatch","tasksReducer","initialTasks","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTasks","_s2","useTasksDispatch","_s3","action","type","id","text","done","map","t","task","filter","Error","$RefreshReg$"],"sources":["/Users/gimmingyu/Desktop/chellange/react-todo-app/src/TasksContext.js"],"sourcesContent":["// import { createContext } from 'react';\nimport { createContext, useContext, useReducer } from 'react';\n\nconst TasksContext = createContext(null);\nconst TasksDispatchContext = createContext(null);\n\nexport function TasksProvider({ children }) {\n  const [tasks, dispatch] = useReducer(\n    tasksReducer,\n    initialTasks\n  );\n\n  return (\n    <TasksContext.Provider value={tasks}>\n      <TasksDispatchContext.Provider value={dispatch}>\n        {children}\n      </TasksDispatchContext.Provider>\n    </TasksContext.Provider>\n  );\n}\n\nexport function useTasks() {\n  return useContext(TasksContext);\n}\n\nexport function useTasksDispatch() {\n  return useContext(TasksDispatchContext);\n}\n\nfunction tasksReducer(tasks, action) {\n  switch (action.type) {\n    case 'added': {\n      return [...tasks, {\n        id: action.id,\n        text: action.text,\n        done: false\n      }];\n    }\n    case 'changed': {\n      return tasks.map(t => {\n        if (t.id === action.task.id) {\n          return action.task;\n        } else {\n          return t;\n        }\n      });\n    }\n    case 'deleted': {\n      return tasks.filter(t => t.id !== action.id);\n    }\n    default: {\n      throw Error('Unknown action: ' + action.type);\n    }\n  }\n}\n\nconst initialTasks = [\n  { id: 0, text: 'Philosopher’s Path', done: true },\n  { id: 1, text: 'Visit the temple', done: false },\n  { id: 2, text: 'Drink matcha', done: false }\n];\n"],"mappings":";;;;AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,YAAY,gBAAGL,aAAa,CAAC,IAAI,CAAC;AACxC,MAAMM,oBAAoB,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEhD,OAAO,SAASO,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,UAAU,CAClCU,YAAY,EACZC,YACF,CAAC;EAED,oBACET,OAAA,CAACC,YAAY,CAACS,QAAQ;IAACC,KAAK,EAAEL,KAAM;IAAAF,QAAA,eAClCJ,OAAA,CAACE,oBAAoB,CAACQ,QAAQ;MAACC,KAAK,EAAEJ,QAAS;MAAAH,QAAA,EAC5CA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACoB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAE5B;AAACV,EAAA,CAbeF,aAAa;AAAAa,EAAA,GAAbb,aAAa;AAe7B,OAAO,SAASc,QAAQA,CAAA,EAAG;EAAAC,GAAA;EACzB,OAAOrB,UAAU,CAACI,YAAY,CAAC;AACjC;AAACiB,GAAA,CAFeD,QAAQ;AAIxB,OAAO,SAASE,gBAAgBA,CAAA,EAAG;EAAAC,GAAA;EACjC,OAAOvB,UAAU,CAACK,oBAAoB,CAAC;AACzC;AAACkB,GAAA,CAFeD,gBAAgB;AAIhC,SAASX,YAAYA,CAACF,KAAK,EAAEe,MAAM,EAAE;EACnC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,OAAO;MAAE;QACZ,OAAO,CAAC,GAAGhB,KAAK,EAAE;UAChBiB,EAAE,EAAEF,MAAM,CAACE,EAAE;UACbC,IAAI,EAAEH,MAAM,CAACG,IAAI;UACjBC,IAAI,EAAE;QACR,CAAC,CAAC;MACJ;IACA,KAAK,SAAS;MAAE;QACd,OAAOnB,KAAK,CAACoB,GAAG,CAACC,CAAC,IAAI;UACpB,IAAIA,CAAC,CAACJ,EAAE,KAAKF,MAAM,CAACO,IAAI,CAACL,EAAE,EAAE;YAC3B,OAAOF,MAAM,CAACO,IAAI;UACpB,CAAC,MAAM;YACL,OAAOD,CAAC;UACV;QACF,CAAC,CAAC;MACJ;IACA,KAAK,SAAS;MAAE;QACd,OAAOrB,KAAK,CAACuB,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACJ,EAAE,KAAKF,MAAM,CAACE,EAAE,CAAC;MAC9C;IACA;MAAS;QACP,MAAMO,KAAK,CAAC,kBAAkB,GAAGT,MAAM,CAACC,IAAI,CAAC;MAC/C;EACF;AACF;AAEA,MAAMb,YAAY,GAAG,CACnB;EAAEc,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,oBAAoB;EAAEC,IAAI,EAAE;AAAK,CAAC,EACjD;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,IAAI,EAAE;AAAM,CAAC,EAChD;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,cAAc;EAAEC,IAAI,EAAE;AAAM,CAAC,CAC7C;AAAC,IAAAT,EAAA;AAAAe,YAAA,CAAAf,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}