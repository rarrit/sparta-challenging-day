{"ast":null,"code":"var _jsxFileName = \"/Users/gimmingyu/Desktop/chellange/react-todo-app/src/AddTask.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport { TasksDispatchContext } from './TasksContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddTask({\n  onAddTask\n}) {\n  _s();\n  // 문자열로 초기화\n  const [text, setText] = useState('');\n\n  // context API\n  const dispatch = useContext(TasksDispatchContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Add task\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setText(''); // text 문자열로 초기화\n        // context API\n        dispatch({\n          type: 'added',\n          id: nextId++,\n          text: text\n        });\n        // onAddTask(text); // 부모 컴포넌트에 작업을 추가\n      },\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AddTask, \"FsI7+cvxBCPjADRvBPrtg6rQF24=\");\n_c = AddTask;\nlet nextId = 3;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["useContext","useState","TasksDispatchContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AddTask","onAddTask","_s","text","setText","dispatch","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","id","nextId","_c","$RefreshReg$"],"sources":["/Users/gimmingyu/Desktop/chellange/react-todo-app/src/AddTask.js"],"sourcesContent":["import { useContext, useState } from 'react';\nimport { TasksDispatchContext } from './TasksContext';\n\nexport default function AddTask({ onAddTask }) {\n  // 문자열로 초기화\n  const [text, setText] = useState('');\n\n  // context API\n  const dispatch = useContext(TasksDispatchContext);\n\n  return (\n    <>\n      <input\n        placeholder=\"Add task\"\n        value={text}\n        onChange={e => setText(e.target.value)}\n      />\n      <button onClick={() => {\n        setText(''); // text 문자열로 초기화\n        // context API\n        dispatch({\n          type: 'added',\n          id: nextId++,\n          text: text,\n        })\n        // onAddTask(text); // 부모 컴포넌트에 작업을 추가\n      }}>Add</button>\n    </>\n  )\n}\n\n\nlet nextId = 3;"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,oBAAoB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtD,eAAe,SAASC,OAAOA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC7C;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMW,QAAQ,GAAGZ,UAAU,CAACE,oBAAoB,CAAC;EAEjD,oBACEE,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA;MACEU,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEL,IAAK;MACZM,QAAQ,EAAEC,CAAC,IAAIN,OAAO,CAACM,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACFlB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAM;QACrBZ,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACb;QACAC,QAAQ,CAAC;UACPY,IAAI,EAAE,OAAO;UACbC,EAAE,EAAEC,MAAM,EAAE;UACZhB,IAAI,EAAEA;QACR,CAAC,CAAC;QACF;MACF,CAAE;MAAAG,QAAA,EAAC;IAAG;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACf,CAAC;AAEP;AAACb,EAAA,CA1BuBF,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AA6B/B,IAAImB,MAAM,GAAG,CAAC;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}