{"ast":null,"code":"var _jsxFileName = \"/Users/gimmingyu/Desktop/chellange/react-todo-app/src/TaskList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useContext } from 'react';\n// context API\nimport { TasksContext, TasksDispatchContext } from './TasksContext.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskList( /*{ tasks, onChangeTask, onDeleteTask}*/\n) {\n  _s();\n  // context API\n  const tasks = useContext(TasksContext);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        onChange: onChangeTask,\n        onDelete: onDeleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"OoxjJOWkcXv7APl5icaQx985KJg=\");\n_c = TaskList;\nfunction Task({\n  task /*onChange, onDelete*/\n}) {\n  _s2();\n  const [isEditing, setIsEditing] = useState(false);\n  // context API\n  const dispatch = useContext(TasksDispatchContext);\n  let taskContent;\n  if (isEditing) {\n    taskContent =\n    /*#__PURE__*/\n    // 편집할 때 폼\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: task.text,\n        onChange: e => {\n          // context API\n          dispatch({\n            type: 'changed',\n            task: {\n              ...task,\n              text: e.target.value\n            }\n          });\n          /*\n          onChange({\n            ...task,\n            text: e.target.value\n          });\n          */\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(false),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    // 일반적으로 사용되는 폼\n    taskContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [task.text, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return (\n    /*#__PURE__*/\n    // 체크박스 \n    _jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.done,\n        onChange: e => {\n          // context API\n          dispatch({\n            type: 'changed',\n            task: {\n              ...task,\n              done: e.target.checked\n            }\n          });\n          /*\n          onChange({\n            ...task,\n            done: e.target.checked\n          });\n          */\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), taskContent, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // context API\n          dispatch({\n            type: 'deleted',\n            id: task.id\n          });\n          // onDelete(task.id)\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s2(Task, \"nE8DyHbXV4ZFutRyBjl+ihEtyNU=\");\n_c2 = Task;\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskList\");\n$RefreshReg$(_c2, \"Task\");","map":{"version":3,"names":["useState","useContext","TasksContext","TasksDispatchContext","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","tasks","children","map","task","Task","onChange","onChangeTask","onDelete","onDeleteTask","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","_s2","isEditing","setIsEditing","dispatch","taskContent","value","text","e","type","target","onClick","checked","done","_c2","$RefreshReg$"],"sources":["/Users/gimmingyu/Desktop/chellange/react-todo-app/src/TaskList.js"],"sourcesContent":["import { useState, useContext } from 'react';\n// context API\nimport { TasksContext, TasksDispatchContext } from './TasksContext.js';\n\nexport default function TaskList(/*{ tasks, onChangeTask, onDeleteTask}*/) {\n  // context API\n  const tasks = useContext(TasksContext);\n  \n  return (\n    <ul>\n      {tasks.map(task => (\n        <li key={task.id}>\n          <Task\n            task={task}\n            onChange={onChangeTask}\n            onDelete={onDeleteTask}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction Task({ task, /*onChange, onDelete*/ }) {\n  const [isEditing, setIsEditing] = useState(false);\n  // context API\n  const dispatch = useContext(TasksDispatchContext);\n  let taskContent;\n  if (isEditing) {\n    taskContent = (\n      // 편집할 때 폼\n      <>\n        <input\n          value={task.text}\n          onChange={e => {\n            // context API\n            dispatch({\n              type: 'changed',\n              task: {\n                ...task,\n                text: e.target.value\n              }\n            });\n            /*\n            onChange({\n              ...task,\n              text: e.target.value\n            });\n            */\n          }} />\n        <button onClick={() => setIsEditing(false)}>\n          Save\n        </button>\n      </>\n    );\n  } else {\n    // 일반적으로 사용되는 폼\n    taskContent = (\n      <>\n        {task.text}\n        <button onClick={() => setIsEditing(true)}>\n          Edit\n        </button>\n      </>\n    );\n  }\n  return (\n    // 체크박스 \n    <label>\n      <input\n        type=\"checkbox\"\n        checked={task.done}\n        onChange={e => {\n          // context API\n          dispatch({\n            type: 'changed',\n            task: {\n              ...task,\n              done: e.target.checked\n            }\n          });\n          /*\n          onChange({\n            ...task,\n            done: e.target.checked\n          });\n          */\n        }}\n      />\n      {taskContent}\n      <button onClick={() => {\n        // context API\n        dispatch({\n          type: 'deleted',\n          id: task.id\n        });\n        // onDelete(task.id)\n      }}>\n        Delete\n      </button>\n    </label>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}